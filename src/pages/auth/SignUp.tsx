import { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';
import { auth } from '../../lib/firebase';
import { toast } from '../../components/Toasts';

export default function SignUp() {
  const nav = useNavigate();
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [pw, setPw] = useState('');
  const [loading, setLoading] = useState(false);

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!name.trim()) return toast('‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠');
    if (!email.trim()) return toast('‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•');
    if (pw.length < 6) return toast('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');

    try {
      setLoading(true);
      const { user } = await createUserWithEmailAndPassword(auth, email, pw);
      await updateProfile(user, { displayName: name });
      toast('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ');
      nav('/profile');
    } catch (err: any) {
      const code = String(err?.code || '');
      // ‡πÅ‡∏õ‡∏•‡∏á error ‡∏Ç‡∏≠‡∏á Firebase ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
      if (code.includes('auth/email-already-in-use')) {
        toast(
          '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‚Ä¢ ‡∏Å‡∏î "Sign in" ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡∏´‡∏£‡∏∑‡∏≠ "Reset password" ‡∏ñ‡πâ‡∏≤‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'
        );
      } else if (code.includes('auth/invalid-email')) {
        toast('‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      } else if (code.includes('auth/weak-password')) {
        toast('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡πà‡∏≠‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)');
      } else {
        toast(`‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${err?.message || 'Unknown error'}`);
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-[80vh] grid place-items-center">
      <form onSubmit={onSubmit} className="card w-full max-w-md p-6 space-y-4">
        <h2 className="text-2xl font-bold text-white">Create account</h2>

        <input
          className="input"
          placeholder="Your name"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />

        <input
          className="input"
          placeholder="name@email.com"
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />

        <input
          className="input"
          placeholder="Password"
          type="password"
          value={pw}
          onChange={(e) => setPw(e.target.value)}
        />

        <button type="submit" className="btn-primary w-full" disabled={loading}>
          {loading ? 'Creating‚Ä¶' : 'Sign up'}
        </button>

        <p className="text-center text-sm text-white/80">
          Already have an account?{' '}
          <Link className="underline" to="/auth/signin">
            Sign in
          </Link>
          {' ‚Ä¢ '}
          <Link className="underline" to="/auth/reset">
            Reset password
          </Link>
        </p>
      </form>
    </div>
  );
}
